# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AggregationLogicalState(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, member: List[str]=None, lag_speed: str=None):  # noqa: E501
        """AggregationLogicalState - a model defined in Swagger

        :param member: The member of this AggregationLogicalState.  # noqa: E501
        :type member: List[str]
        :param lag_speed: The lag_speed of this AggregationLogicalState.  # noqa: E501
        :type lag_speed: str
        """
        self.swagger_types = {
            'member': List[str],
            'lag_speed': str
        }

        self.attribute_map = {
            'member': 'member',
            'lag_speed': 'lagSpeed'
        }

        self._member = member
        self._lag_speed = lag_speed

    @classmethod
    def from_dict(cls, dikt) -> 'AggregationLogicalState':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AggregationLogicalState of this AggregationLogicalState.  # noqa: E501
        :rtype: AggregationLogicalState
        """
        return util.deserialize_model(dikt, cls)

    @property
    def member(self) -> List[str]:
        """Gets the member of this AggregationLogicalState.


        :return: The member of this AggregationLogicalState.
        :rtype: List[str]
        """
        return self._member

    @member.setter
    def member(self, member: List[str]):
        """Sets the member of this AggregationLogicalState.


        :param member: The member of this AggregationLogicalState.
        :type member: List[str]
        """

        self._member = member

    @property
    def lag_speed(self) -> str:
        """Gets the lag_speed of this AggregationLogicalState.

        Reports effective speed of the aggregate interface, based on speed of active member interfaces  # noqa: E501

        :return: The lag_speed of this AggregationLogicalState.
        :rtype: str
        """
        return self._lag_speed

    @lag_speed.setter
    def lag_speed(self, lag_speed: str):
        """Sets the lag_speed of this AggregationLogicalState.

        Reports effective speed of the aggregate interface, based on speed of active member interfaces  # noqa: E501

        :param lag_speed: The lag_speed of this AggregationLogicalState.
        :type lag_speed: str
        """

        self._lag_speed = lag_speed
