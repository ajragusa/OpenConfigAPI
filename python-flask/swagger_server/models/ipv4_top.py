# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Ipv4Top(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, ipv4: object=None):  # noqa: E501
        """Ipv4Top - a model defined in Swagger

        :param ipv4: The ipv4 of this Ipv4Top.  # noqa: E501
        :type ipv4: object
        """
        self.swagger_types = {
            'ipv4': object
        }

        self.attribute_map = {
            'ipv4': 'ipv4'
        }

        self._ipv4 = ipv4

    @classmethod
    def from_dict(cls, dikt) -> 'Ipv4Top':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Ipv4Top of this Ipv4Top.  # noqa: E501
        :rtype: Ipv4Top
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ipv4(self) -> object:
        """Gets the ipv4 of this Ipv4Top.

        Parameters for the IPv4 address family.  # noqa: E501

        :return: The ipv4 of this Ipv4Top.
        :rtype: object
        """
        return self._ipv4

    @ipv4.setter
    def ipv4(self, ipv4: object):
        """Sets the ipv4 of this Ipv4Top.

        Parameters for the IPv4 address family.  # noqa: E501

        :param ipv4: The ipv4 of this Ipv4Top.
        :type ipv4: object
        """

        self._ipv4 = ipv4
