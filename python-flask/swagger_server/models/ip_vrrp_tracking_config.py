# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IpVrrpTrackingConfig(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, priority_decrement: str=None, track_interface: List[str]=None):  # noqa: E501
        """IpVrrpTrackingConfig - a model defined in Swagger

        :param priority_decrement: The priority_decrement of this IpVrrpTrackingConfig.  # noqa: E501
        :type priority_decrement: str
        :param track_interface: The track_interface of this IpVrrpTrackingConfig.  # noqa: E501
        :type track_interface: List[str]
        """
        self.swagger_types = {
            'priority_decrement': str,
            'track_interface': List[str]
        }

        self.attribute_map = {
            'priority_decrement': 'priorityDecrement',
            'track_interface': 'trackInterface'
        }

        self._priority_decrement = priority_decrement
        self._track_interface = track_interface

    @classmethod
    def from_dict(cls, dikt) -> 'IpVrrpTrackingConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The IpVrrpTrackingConfig of this IpVrrpTrackingConfig.  # noqa: E501
        :rtype: IpVrrpTrackingConfig
        """
        return util.deserialize_model(dikt, cls)

    @property
    def priority_decrement(self) -> str:
        """Gets the priority_decrement of this IpVrrpTrackingConfig.

        Set the value to subtract from priority when the tracked interface goes down  # noqa: E501

        :return: The priority_decrement of this IpVrrpTrackingConfig.
        :rtype: str
        """
        return self._priority_decrement

    @priority_decrement.setter
    def priority_decrement(self, priority_decrement: str):
        """Sets the priority_decrement of this IpVrrpTrackingConfig.

        Set the value to subtract from priority when the tracked interface goes down  # noqa: E501

        :param priority_decrement: The priority_decrement of this IpVrrpTrackingConfig.
        :type priority_decrement: str
        """

        self._priority_decrement = priority_decrement

    @property
    def track_interface(self) -> List[str]:
        """Gets the track_interface of this IpVrrpTrackingConfig.


        :return: The track_interface of this IpVrrpTrackingConfig.
        :rtype: List[str]
        """
        return self._track_interface

    @track_interface.setter
    def track_interface(self, track_interface: List[str]):
        """Sets the track_interface of this IpVrrpTrackingConfig.


        :param track_interface: The track_interface of this IpVrrpTrackingConfig.
        :type track_interface: List[str]
        """

        self._track_interface = track_interface
