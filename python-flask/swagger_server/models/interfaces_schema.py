# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.subinterfaces_top import SubinterfacesTop  # noqa: F401,E501
from swagger_server import util


class InterfacesSchema(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, interface: List[SubinterfacesTop]=None):  # noqa: E501
        """InterfacesSchema - a model defined in Swagger

        :param interface: The interface of this InterfacesSchema.  # noqa: E501
        :type interface: List[SubinterfacesTop]
        """
        self.swagger_types = {
            'interface': List[SubinterfacesTop]
        }

        self.attribute_map = {
            'interface': 'interface'
        }

        self._interface = interface

    @classmethod
    def from_dict(cls, dikt) -> 'InterfacesSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InterfacesSchema of this InterfacesSchema.  # noqa: E501
        :rtype: InterfacesSchema
        """
        return util.deserialize_model(dikt, cls)

    @property
    def interface(self) -> List[SubinterfacesTop]:
        """Gets the interface of this InterfacesSchema.

        The list of named interfaces on the device.  # noqa: E501

        :return: The interface of this InterfacesSchema.
        :rtype: List[SubinterfacesTop]
        """
        return self._interface

    @interface.setter
    def interface(self, interface: List[SubinterfacesTop]):
        """Sets the interface of this InterfacesSchema.

        The list of named interfaces on the device.  # noqa: E501

        :param interface: The interface of this InterfacesSchema.
        :type interface: List[SubinterfacesTop]
        """

        self._interface = interface
