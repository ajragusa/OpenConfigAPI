# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.interface_counters_state import InterfaceCountersState  # noqa: F401,E501
from swagger_server.models.interface_counters_state_counters import InterfaceCountersStateCounters  # noqa: F401,E501
from swagger_server import util


class SubinterfacesState(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, counters: InterfaceCountersStateCounters=None, name: str=None):  # noqa: E501
        """SubinterfacesState - a model defined in Swagger

        :param counters: The counters of this SubinterfacesState.  # noqa: E501
        :type counters: InterfaceCountersStateCounters
        :param name: The name of this SubinterfacesState.  # noqa: E501
        :type name: str
        """
        self.swagger_types = {
            'counters': InterfaceCountersStateCounters,
            'name': str
        }

        self.attribute_map = {
            'counters': 'counters',
            'name': 'name'
        }

        self._counters = counters
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'SubinterfacesState':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SubinterfacesState of this SubinterfacesState.  # noqa: E501
        :rtype: SubinterfacesState
        """
        return util.deserialize_model(dikt, cls)

    @property
    def counters(self) -> InterfaceCountersStateCounters:
        """Gets the counters of this SubinterfacesState.


        :return: The counters of this SubinterfacesState.
        :rtype: InterfaceCountersStateCounters
        """
        return self._counters

    @counters.setter
    def counters(self, counters: InterfaceCountersStateCounters):
        """Sets the counters of this SubinterfacesState.


        :param counters: The counters of this SubinterfacesState.
        :type counters: InterfaceCountersStateCounters
        """

        self._counters = counters

    @property
    def name(self) -> str:
        """Gets the name of this SubinterfacesState.

        The system-assigned name for the sub-interface.  This MAY be a combination of the base interface name and the subinterface index, or some other convention used by the system.  # noqa: E501

        :return: The name of this SubinterfacesState.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this SubinterfacesState.

        The system-assigned name for the sub-interface.  This MAY be a combination of the base interface name and the subinterface index, or some other convention used by the system.  # noqa: E501

        :param name: The name of this SubinterfacesState.
        :type name: str
        """

        self._name = name
