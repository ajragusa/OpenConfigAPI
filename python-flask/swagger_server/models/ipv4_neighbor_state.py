# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Ipv4NeighborState(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, origin: str=None):  # noqa: E501
        """Ipv4NeighborState - a model defined in Swagger

        :param origin: The origin of this Ipv4NeighborState.  # noqa: E501
        :type origin: str
        """
        self.swagger_types = {
            'origin': str
        }

        self.attribute_map = {
            'origin': 'origin'
        }

        self._origin = origin

    @classmethod
    def from_dict(cls, dikt) -> 'Ipv4NeighborState':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Ipv4NeighborState of this Ipv4NeighborState.  # noqa: E501
        :rtype: Ipv4NeighborState
        """
        return util.deserialize_model(dikt, cls)

    @property
    def origin(self) -> str:
        """Gets the origin of this Ipv4NeighborState.

        The origin of this neighbor entry, static or dynamic.  # noqa: E501

        :return: The origin of this Ipv4NeighborState.
        :rtype: str
        """
        return self._origin

    @origin.setter
    def origin(self, origin: str):
        """Sets the origin of this Ipv4NeighborState.

        The origin of this neighbor entry, static or dynamic.  # noqa: E501

        :param origin: The origin of this Ipv4NeighborState.
        :type origin: str
        """
        allowed_values = ["OTHER", "STATIC", "DYNAMIC"]  # noqa: E501
        if origin not in allowed_values:
            raise ValueError(
                "Invalid value for `origin` ({0}), must be one of {1}"
                .format(origin, allowed_values)
            )

        self._origin = origin
